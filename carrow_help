#!/bin/sh

# Edit History
# version Initials    Date            Summary
# 1.0     ARS         25-Jul-2023     original draft of carrow lab help manual
# 1.1     ARS         04-Jul-2023     Added carrow_update and updated some of the functions
# 1.2     ARS         16-Aug-2023     Added load_orca_4 and orca_postmortem, updated launch_orca_4
# 1.3     ARS         29-Aug-2023     Removed load_orca_4 because it doesn't work - added shell instructions to bash cheat sheet

carrow_commands="
-------------------------Carrow Lab Custom Commands-------------------------
The following commands are custom-made for the Carrow lab
For help, simply pass '-help' as an argument to the command

launch_orca_4
usage: launch_orca_4 [dd:hh:mm:ss] [nM] [file_name] [-scan] [-write] [-batch_scan]
launches a batch orca calculation from a properly formatted directory

process_orca_4
usage: process_orca_4
compiles data from a finished job into a .csv file, 
analyzes negative frequencies, and oranizes job files

orca_postmortem
usage: orca_postmortem filename.out
compiles useful troubleshooting information from failed jobs

sterimol
usage: sterimol -a1 atom_1 -a2 atom_2 -radii radius_model
launches a modified version of Prof Paton's sterimol script
analyzes steric properties of all .xyz files in the directory

carrow_update
usage: carrow_update update_file
appends contents of update_file to the updates list
if a user has not seen an update, it automatically prints upon login

use 'carrow_help -bash' for a cheat sheet of basic bash commands.
----------------------------------------------------------------------------
"

bash_cheat_sheet="
------------------------------Bash Cheat Sheet------------------------------
The following commands are standard bash commands,
but they are highlighted here for beginner students.
For more informatio about a command, use 'man command' e.g. 'man cd'

The carrow lab's directory can be found at /project/carrow/

                         --------Elementary--------

cd                     |  'change directory' to home directory
cd /path/to/directory  |  'change directory' to specified directory
cd directory           |  'change directory' to specified subdirectory
cd ..                  |  'change directory' up one directory
                       |
ls                     |  'list' directory contents
                       |
sbatch                 |  start 'batch' job through 'SLURM'
                       |
squeue -u username     |  checks user's 'SLURM queue'
                       |
scancel job_ID         |  'cancels' specified 'SLURM' job

                         ---------Beginner---------

# use '*' with any command as a 'wild card'

ls *text                      |  'lists' all files that end with 'text'
ls text*                      |  'lists' all files that start with 'text'
                              |
cp file new_name              |  'copies' file as new_name
cp /file/path/1 /file/path/2  |  'copies' files by specified paths
                              |
mv file new_name              |  renames file
mv /file/path/1 file/path/2   |  'moves' file from path 1 to path 2
                              |
rm file                       |  deletes ('removes') file
                              |
nano file                     |  opens file with a simple text editor
                              |
tail -n N filename            |  prints last N lines of a file
                              |
du -h --max-depth=1           |  prints the size of each file/subdirectory

              ---------Establishing Orca Environment---------

# Enter the following three lines to load Orca 4.2.1

module purge
module use /project/carrow/downloads/apps/modules
module add orca

# Enter the following to load the most recently installed version of Orca 5

module load ORCA

                         --------------------------
For further instruction in bash, take 
HPE-DSI 101: Introduction to cluster computing
----------------------------------------------------------------------------
"

error_message="Error: invalid arguments
Usage: carrow_help
use 'carrow_help -bash' for the bash cheat sheet"

#Normal usage of the command
if [ $# -eq 0 ]; then
	echo -e "$carrow_commands"

elif [[ "$*" == *"-bash"* ]]; then
	echo -e "$bash_cheat_sheet"
else
	echo -e "$error_message"
fi
